<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DNS on /home/cubl</title><link>/tags/dns/</link><description>Recent content in DNS on /home/cubl</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 23 Mar 2016 00:00:00 +0000</lastBuildDate><atom:link href="/tags/dns/index.xml" rel="self" type="application/rss+xml"/><item><title>利用非标准端口 DNS 服务器避免 DNS 劫持</title><link>/2016/03/23/%E5%88%A9%E7%94%A8%E9%9D%9E%E6%A0%87%E5%87%86%E7%AB%AF%E5%8F%A3-dns-%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%81%BF%E5%85%8D-dns-%E5%8A%AB%E6%8C%81/</link><pubDate>Wed, 23 Mar 2016 00:00:00 +0000</pubDate><guid>/2016/03/23/%E5%88%A9%E7%94%A8%E9%9D%9E%E6%A0%87%E5%87%86%E7%AB%AF%E5%8F%A3-dns-%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%81%BF%E5%85%8D-dns-%E5%8A%AB%E6%8C%81/</guid><description>GFW的DNS劫持原理: 说起来挺简单,GFW对境外DNS的劫持,是在发现你请求敏感域名的DNS记录时,伪装成你请求的DNS返回一个污染的数据包给你的解析器,但并不会丢弃你向境外DNS的请求,也不会丢弃境外DNS返回的正确解析结果,他只是让错误的数据抢先回来欺骗了你的解析器而已,毕竟他直接从国内给你发污染数据怎么都比国外DNS返回正确数据要快.而解析器在先收到了欺骗数据包之后,就不会再管后面返回的正确数据了,这样你就被 DNS劫持了.1
很久以前我是用这篇 blog1提供的方法，就是用 iptables drop 掉 GFW 的假 DNS 解析包。但是 2015 年 GFW 开始采用随机 IP 污染的方式，这种黑名单的解决方案已经不可用了。后来换了 dnscrypt-proxy，还算是比较好用的。但是最近不明原因，dnscrypt-proxy 在使用一段时间之后老是卡住。尝试解决无果，就想办法找替代的方案。
前几天发现 GFW 没有劫持非标准端口的 DNS 服务器，于是想到了下面两种方法避免劫持。
iptables 将外网网卡(我这是 enp8s0)发出的 dport 是 53 的包 DNAT 给 OpenDNS 443 端口。
1 2 iptables -t nat -A OUTPUT -o enp8s0 -p udp --dport 53 \ -j DNAT --to 208.67.222.222:443 dnsmasq 以下是采用 OpenDNS 443 端口的示例配置。
port=53 no-resolv # For IPv6 # server=2620:0:ccc::2#443 server=208.</description></item></channel></rss>