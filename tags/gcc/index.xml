<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GCC on /home/cubarco</title><link>https://cubarco.org/tags/gcc/</link><description>Recent content in GCC on /home/cubarco</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 02 May 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://cubarco.org/tags/gcc/index.xml" rel="self" type="application/rss+xml"/><item><title>C Programming Tricks</title><link>https://cubarco.org/2015/05/c-programming-tricks/</link><pubDate>Sat, 02 May 2015 00:00:00 +0000</pubDate><guid>https://cubarco.org/2015/05/c-programming-tricks/</guid><description>这个 Note 用来记录各处收集的 C 编程 tricks. 看到有意思的就会摘一下，来源各异。
Anonymous arrays C99 offers some really cool stuff using anonymous arrays:
Removing pointless variables int yes=1; setsockopt(yourSocket, SOL_SOCKET, SO_REUSEADDR, &amp;amp;yes, sizeof(int)); /* becomes: */ setsockopt(yourSocket, SOL_SOCKET, SO_REUSEADDR, (int[]){1}, sizeof(int)); Passing a Variable Amount of Arguments Void func(type* values) { while(*values) { x = *values++; /* do whatever with x */ } } func((type[]){val1,val2,val3,val4,0}); Static linked lists int main() { struct llist { int a; struct llist* next;}; #define cons(x,y) (struct llist[]){ {x,y} } struct llist *list=cons(1, cons(2, cons(3, cons(4, NULL)))); struct llist *p = list; while(p !</description></item></channel></rss>