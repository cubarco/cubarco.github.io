<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GFW on /home/cubarco</title><link>https://cubar.co/tags/gfw/</link><description>Recent content in GFW on /home/cubarco</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 09 Apr 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://cubar.co/tags/gfw/index.xml" rel="self" type="application/rss+xml"/><item><title>如何用 Nginx 搭建简单的 DuckDuckGo 代理站</title><link>https://cubar.co/2016/04/how-to-set-up-a-duckduckgo-proxy-site-with-nginx/</link><pubDate>Sat, 09 Apr 2016 00:00:00 +0000</pubDate><guid>https://cubar.co/2016/04/how-to-set-up-a-duckduckgo-proxy-site-with-nginx/</guid><description>最近感觉手机的网络环境经常变，在寝室 v6， 出门 v4，有的时候会懒得开代理。所以就用 cloudflare+nginx 搞了个简单的 DuckDuckGo 代理站，方便随时掏出手机搜索。没有选择代理 Google 有几点原因，一个是 vps 连 Google 经常让输验证码，再就是 DuckDuckGo 不带 cookie 的搜索结果貌似比 Google 优(?)。
Nginx nginx 的配置文件如下。domain.com 改成具体的域名，/path/to/要改成 duck.domain.com 的证书路径。/etc/letsencrypt/live/images.duck.domain.com/是 Let&amp;rsquo;s encrypt 生成证书的默认目录，稍后会提到。
Gist: cubarco/08e99fbf316a435b7935727810e40458
Cloudflare duck.domain.com 可以用 Cloudflare 做 CDN，然后 crypto 策略选 Full(非strict) 的话在服务器上可以随便给 duck.domain.com 创建个证书用，具体参照1。但是像 images.duck.domain.com 这种三级域名的话，Cloudflare 是没有给 SSL 证书的，所以只好自己在服务器上配，推荐用 Let&amp;rsquo;s encrypt 签证书，方便快捷。
Let&amp;rsquo;s encrypt Let&amp;rsquo;s encrypt 的使用细节我就不赘述了，可以看官方给的 Guide2.
这里需要的三个证书可以用如下命令生成：
./letsencrypt-auto certonly --manual -d images.duck.domain.com \ -d icons.duck.domain.com \ -d ac.</description></item><item><title>利用非标准端口 DNS 服务器避免 DNS 劫持</title><link>https://cubar.co/2016/03/avoid-dns-hijacking-with-non-standard-port-dns/</link><pubDate>Wed, 23 Mar 2016 00:00:00 +0000</pubDate><guid>https://cubar.co/2016/03/avoid-dns-hijacking-with-non-standard-port-dns/</guid><description>GFW的DNS劫持原理: 说起来挺简单,GFW对境外DNS的劫持,是在发现你请求敏感域名的DNS记录时,伪装成你请求的DNS返回一个污染的数据包给你的解析器,但并不会丢弃你向境外DNS的请求,也不会丢弃境外DNS返回的正确解析结果,他只是让错误的数据抢先回来欺骗了你的解析器而已,毕竟他直接从国内给你发污染数据怎么都比国外DNS返回正确数据要快.而解析器在先收到了欺骗数据包之后,就不会再管后面返回的正确数据了,这样你就被 DNS劫持了.1
很久以前我是用这篇 blog1提供的方法，就是用 iptables drop 掉 GFW 的假 DNS 解析包。但是 2015 年 GFW 开始采用随机 IP 污染的方式，这种黑名单的解决方案已经不可用了。后来换了 dnscrypt-proxy，还算是比较好用的。但是最近不明原因，dnscrypt-proxy 在使用一段时间之后老是卡住。尝试解决无果，就想办法找替代的方案。
前几天发现 GFW 没有劫持非标准端口的 DNS 服务器，于是想到了下面两种方法避免劫持。
iptables 将外网网卡(我这是 enp8s0)发出的 dport 是 53 的包 DNAT 给 OpenDNS 443 端口。
iptables -t nat -A OUTPUT -o enp8s0 -p udp --dport 53 \ -j DNAT --to 208.67.222.222:443 dnsmasq 以下是采用 OpenDNS 443 端口的示例配置。
port=53 no-resolv # For IPv6 # server=2620:0:ccc::2#443 server=208.67.222.222#443 listen-address=127.0.0.1 Dnsmasq 的具体使用，可以看 ArchWiki2.</description></item></channel></rss>